
# define maximum wait-for-source-attribute to appear before try again (1 second)
from nltk import sent_tokenize, word_tokenize, pos_tag, ne_chunk


def extract_entities(text):
    entities = []
    for sentence in sent_tokenize(text):
        chunks = ne_chunk(pos_tag(word_tokenize(sentence)))
        entities.extend([chunk for chunk in chunks if hasattr(chunk, 'label')])
    return entities


if __name__ == '__main__':

    import speech_recognition as sr

    # obtain audio from the microphone
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Please wait. Calibrating microphone...")
        # listen for 5 seconds and create the ambient noise energy level
        r.adjust_for_ambient_noise(source, duration=5)
        print("Say something!")
       # r.record(source,duration=10)
        audio = r.listen(source,phrase_time_limit=5)

        # recognize speech using Google
        sample = r.recognize_google(audio)
        text_file = open("word-to-text.txt", "w")
        text_file.write(sample)
        text_file.close()

        # write audio to a WAV file
        with open("microphone-results.wav", "wb") as f:
            f.write(audio.get_wav_data())

    try:
        print("Google thinks you said '" + sample + "'")
    except sr.UnknownValueError:
        print("Google could not understand audio")
    except sr.RequestError as e:
        print("Google error; {0}".format(e))


    text = sample
    print(extract_entities(text))
